version: '3.0'
services:
  redis:
    image: 'redis'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: unless-stopped
  ingest:
    build:
      context: ./ingest
    depends_on: 
      - redis
    env_file: ./.ingest.env
    restart: unless-stopped
  process:
    build:
      context: ./process
    depends_on:
      - redis
      - influxdb
    env_file: ./.process.env
    volumes:
      - redis-data:/data
    restart: unless-stopped
  influxdb:
    image: 'influxdb:1.7.10'
    volumes:
      - influxdb-data:/var/lib/influxdb
    restart: unless-stopped
  grafana:
    image: 'grafana/grafana'
    depends_on: 
      - influxdb
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_ENABLE_GZIP=true
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/dust.json
      - PLUGINS=redis-datasource
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/config.ini:/etc/grafana/config.ini
    # labels:
    #   traefik.enable: true
    #   traefik.http.routers.dust_grafana.rule: Host(`${GRAFANA_URL}`)
    #   traefik.http.services.dust_grafana.loadbalancer.server.port: 3000
    #   # traefik.port: 3000
    #   traefik.docker.network: reverse_proxy
    networks:
      - default
      # - reverse_proxy
  weatherapi:
    build:
      context: ./weatherapi
    depends_on:
      - influxdb
    env_file: ./.weatherapi.env
    restart: unless-stopped
  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: dust
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3030:3030"
    depends_on:
      - influxdb
      - mongodb
    environment:
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=dust-staging
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086
      - INFLUXDB_DATABASE=dust-staging
    restart: unless-stopped
    volumes:
      - ./backend/src:/app/src
      - ./backend/config:/app/config
  mongoexpress:
    image: 'mongo-express'
    depends_on:
      - mongodb
    restart: unless-stopped
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    ports:
      - "8081:8081"

volumes:
  influxdb-data:
  redis-data:

# networks:
#   reverse_proxy:
#     external:
#       name: reverse_proxy
